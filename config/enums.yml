# IMPORTANT: All application enums should be defined in this file
#
# They will be made available to the application via: config/initializers/enums.rb
# ...and will be exposed uner the ENUMS module
#
# NOTE: Entries in this file can be either key/value or a simple list
#
# Examples
#
#   RATINGS:
#     gold: happy
#     silver: satisfied
#     bronze: sad
#
#   The YAML above will be converted to the following enums
#
#   pry>ENUMS::RATINGS::GOLD       # happy
#   pry>ENUMS::RATINGS::HAPPY      # gold
#   pry>ENUMS::RATINGS::SILVER     # satisfied
#   pry>ENUMS::RATINGS::SATISFIED  # silver
#   pry>ENUMS::RATINGS::BRONZE     # sad
#   pry>ENUMS::RATINGS::SAD        # bronze
#
#   ENUMs also supports the following helper methods
#
#   pry>ENUMS::RATINGS.keys             # [gold, silver, bronze]
#   pry>ENUMS::RATINGS.values           # [happy, satisfied, sad]
#   pry>ENUMS::RATINGS.happy? :gold     # true
#   pry>ENUMS::RATINGS.happy? :bronze   # false
#   pry>ENUMS::RATINGS["happy"]         # gold
#   pry>ENUMS::RATINGS["gold"]          # happy
#
#   ----------------------------------------------------------------------------
#
#   USER_ROLES:
#     - administrator
#     - advertiser
#     - publisher
#
#   The YAML above will be converted to the following enums
#
#   pry>ENUMS::USER_ROLES::ADMINISTRATOR # administrator
#   pry>ENUMS::USER_ROLES::ADVERTISER    # advertiser
#   pry>ENUMS::USER_ROLES::PUBLISHER     # publisher
#
#   pry>ENUMS::USER_ROLES.keys                          # [administrator, advertiser, publisher]
#   pry>ENUMS::USER_ROLES.values                        # [administrator, advertiser, publisher]
#   pry>ENUMS::USER_ROLES.administrator? :administrator # true
#   pry>ENUMS::USER_ROLES.administrator? :publisher     # false
#   pry>ENUMS::USER_ROLES["administrator"]              # administrator
#
#   ----------------------------------------------------------------------------
#
#   CAMPAIGN_STATUSES:
#     1: pending
#     2: active
#     3: archived
#
#   The YAML above will be converted to the following enums
#
#   pry>ENUMS::CAMPAIGN_STATUSES::PENDING    # 1
#   pry>ENUMS::CAMPAIGN_STATUSES::ACTIVE     # 2
#   pry>ENUMS::CAMPAIGN_STATUSES::ARCHIVED   # 3
#
#   pry>ENUMS::CAMPAIGN_STATUSES.keys        # [1, 2, 3]
#   pry>ENUMS::CAMPAIGN_STATUSES.values      # [pending, active, archived]
#   pry>ENUMS::CAMPAIGN_STATUSES.pending? 1  # true
#   pry>ENUMS::CAMPAIGN_STATUSES.pending? 2  # false
#   pry>ENUMS::CAMPAIGN_STATUSES["active"]   # 2
#   pry>ENUMS::CAMPAIGN_STATUSES[2]          # active
#

APPLICANT_STATUSES:
  - pending
  - accepted
  - rejected

APPLICANT_ROLES:
  - advertiser
  - publisher

USER_ROLES:
  - administrator
  - advertiser
  - employer
  - publisher

CAMPAIGN_STATUSES:
  - pending
  - active
  - archived

CAMPAIGN_STATUS_COLORS:
  pending: warning
  active: success
  archived: muted

PROPERTY_TYPES:
  - website
  - repository
  - newsletter

PROPERTY_STATUSES:
  - pending
  - active
  - rejected
  - archived
  - blacklisted

PROPERTY_STATUS_COLORS:
  pending: warning
  active: success
  rejected: danger
  archived: muted
  blacklisted: dark

IMAGE_FORMATS:
  - small
  - large
  - wide

IMAGE_CONTENT_TYPES:
  - image/gif
  - image/jpeg
  - image/png

IMPRESSION_CODES:
  - ok
  - property_inactive
  - impression_count_exceeded
  - no_possible_ads

RESERVED_ORGANIZATION_NAMES:
  - codefund

ORGANIZATION_TRANSACTION_TYPES:
  - debit
  - credit

ORGANIZATION_SEARCH_DIRECTIONS:
  - positive
  - negative
  - zero

JOB_TYPES:
  - full_time
  - part_time
  - contract

JOB_SOURCES:
  - internal
  - remoteok

LANGUAGES:
  - Albanian
  - Armenian
  - Azeri
  - Belarusian
  - Bosnian
  - Bulgarian
  - Chinese
  - Croatian
  - Czech
  - Danish
  - Divehi
  - Dutch
  - English
  - Estonian
  - FYRO Macedonian
  - Faroese
  - Farsi
  - Finnish
  - French
  - Galician
  - Georgian
  - German
  - Greek
  - Hebrew
  - Hindi
  - Hungarian
  - Icelandic
  - Indonesian
  - Italian
  - Japanese
  - Kazakh
  - Korean
  - Kyrgyz
  - Latvian
  - Lithuanian
  - Malay
  - Maltese
  - Maori
  - Mongolian
  - Norwegian
  - Pashto
  - Polish
  - Portuguese
  - Romanian
  - Russian
  - Serbian
  - Slovak
  - Slovenian
  - Spanish
  - Swahili
  - Swedish
  - Syriac
  - Tagalog
  - Thai
  - Turkish
  - Ukrainian
  - Urdu
  - Uzbek
  - Vietnamese
  - Zulu

KEYWORDS:
  # topics
  'Android':
    - android
    - javascript
    - mobile
  'Angular':
    - angularjs
    - javascript
  'Backend':
    - architecture
    - backend
    - full stack
    - full-stack
  'Blockchain':
    - cryptography
  'CSS & Design':
    - css
    - design
    - html
    - ui
    - ux
  'Cryptography':
    - cryptography
  'Database':
    - full stack
    - full-stack
    - graphql
    - mongodb
  'DevOps':
    - devops
    - kubernetes
  'Developer Resources':
    - technical writing
  'Frontend':
    - front end
    - frontend
    - full stack
    - full-stack
    - javascript
    - html
    - vue react angular
    - web dev
  'Game Development':
    - game design
    - game dev
    - gaming
    - unity
  'Hybrid & Mobile Web':
    - electron
    - javascript
    - html
    - mobile
  'IoT':
    - iot
    - internet of things
    - wireless
  'Machine Learning':
    - machine learning
  'React':
    - javascript
    - react
    - react native
    - reactnative
  'Security':
    - infosec
    - network security
  'Serverless':
    - architecture
    - cloud
    - devops
    - kubernetes
    - microservices
    - serverless
  'Virtual Reality':
    - virtual reality
    - vr
  'VueJS':
    - javascript
  'iOS':
    - mobile

  # programming languages
  '.NET':
    - dot net
    - dotnet
    - .net
    - windows
  'C':
    - c
    - c plus plus
  'C#':
    - c#
  'C++':
    - c++
    - c plus plus
  'D':
    - d
  'Dart':
    - dart
  'Erlang':
    - elixir
    - erlang
    - phoenix
  'F#':
    - f sharp
    - f#
  'Go':
    - go
    - golang
  'Groovy':
    - groovy
  'Haskell':
    - haskell
  'Java':
    - android
    - java
  'JavaScript':
    - angularjs
    - electron
    - es6
    - graphql
    - javascript
    - meteor js
    - node
    - node js
    - node.js
  'Julia':
    - julia
  'Kotlin':
    - kotlin
  'Objective-C':
    - objective-c
    - objective c
    - obj c
  'PHP':
    - drupal
    - laravel
    - php
  'PL/SQL':
    - pl/sql
    - plsql
  'Python':
    - django
    - python
  'Q':
    - q
  'R':
    - r
  'Ruby':
    - rails
    - ruby
  'Rust':
    - rust
  'Scala':
    - scala
  'Swift':
    - swift
  'Other':
    - other
